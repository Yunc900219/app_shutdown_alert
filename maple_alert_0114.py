# -*- coding: utf-8 -*-
"""Untitled9.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1RPUAzzhk9o2a8DWe0BuHSiF7UhmpiaR7
"""

import psutil
import time
import requests
import socket
from datetime import datetime
import pytz



# 定義檢查檔案是否被開啟的函式
def is_file_open():
    """
    檢查指定的檔案是否被任何進程開啟
    :return: 如果檔案被開啟，回傳 True；否則回傳 False
    """
    for proc in psutil.process_iter(['pid', 'name']):
        try:
            if proc.name() == 'MapleStory.exe' and proc.status() == 'running':
                return True
        except (psutil.AccessDenied, psutil.NoSuchProcess):
            continue
    return False

# 定義發送 Discord 訊息的函式
def send_discord_message(webhook_url, message):
    """
    傳送訊息到 Discord
    :param webhook_url: Discord Webhook URL
    :param message: 要傳送的訊息
    """
    payload = {"content": message}
    headers = {"Content-Type": "application/json"}
    try:
        response = requests.post(webhook_url, json=payload, headers=headers)
        if response.status_code == 204:
            print("訊息已發送至 Discord")
        else:
            print(f"發送訊息失敗: {response.status_code}, {response.text}")
    except Exception as e:
        print(f"傳送 Discord 訊息時發生錯誤: {e}")

# 主邏輯
if __name__ == "__main__":
    file_to_check = r"D:\\Maple\\Ranmellev2\\MapleStory.exe"
    discord_webhook_url = "https://discord.com/api/webhooks/1328066686087200889/SBzPZcHraTSqw6689ScMCIqoPV7zBrGKMDYE0R6dADS0mh0Fj-47j7OdeYitjctFHGrD"  # 替換為您的 Webhook URL
    user = socket.gethostname()

    message_sent = False  # 避免重複傳送訊息
    recheck_timer = None  # 計時器變數，追蹤是否需要延遲偵測
    gmt_plus_8 = pytz.timezone('Asia/Taipei')


# 格式化顯示

    while True:
        if not is_file_open():
            now = datetime.now(gmt_plus_8)

            formatted_time = now.strftime("%H:%M:%S")

            print(f"檔案 '{file_to_check}' 未被開啟 '{formatted_time}'")
            if not message_sent:
                send_discord_message(discord_webhook_url, f"{user}: MapleStory已被關閉")
                message_sent = True
        else:
            print(f"檔案 '{file_to_check}' 正在被使用")
            if message_sent:
                # 設置三分鐘的計時器，避免重複傳送訊息
                if recheck_timer is None:
                    recheck_timer = time.time()
                elif time.time() - recheck_timer >= 180:  # 超過三分鐘後重置狀態
                    message_sent = False
                    recheck_timer = None
            else:
                recheck_timer = None  # 如果未傳送過關閉訊息，保持計時器為 None

        time.sleep(1)